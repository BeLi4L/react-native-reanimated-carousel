{"version":3,"sources":["src/pages/snap-carousel-complex/index.tsx"],"names":["PAGE_WIDTH","window","width","Index","r","React","_jsxs","View","style","flex","backgroundColor","paddingTop","children","_jsx","height","Carousel","ref","loop","itemWidth","sliderWidth","data","_toConsumableArray","Array","keys","windowSize","renderItem","_ref","index","justifyContent","alignItems","padding","Text","color","fontSize","ScrollView","fill","map","_","i","borderWidth","borderColor","marginTop","flexDirection","SButton","onPress","_r$current","current","snapToPrev","_r$current2","snapToNext"],"mappings":"gLAOMA,EAAaC,SAAOC,MAyEXC,UAvEf,WACE,IAAMC,EAAIC,SAA4B,MAEtC,OACEC,eAACC,UAAI,CACHC,MAAO,CACLC,KAAM,EACNC,gBAAiB,UACjBC,WAAY,KACZC,SAAA,CAEFC,cAACN,UAAI,CAACC,MAAO,CAAEN,MAAOF,EAAYc,OAAQ,KAAMF,SAC9CC,cAACE,UAAQ,CACPC,IAAKZ,EACLa,MAAI,EACJC,UAAWlB,EACXmB,YAAanB,EACboB,KAAIC,IAAM,IAAIC,MAAM,IAAIC,QACxBC,WAAY,EACZC,WAAY,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OAClBrB,eAACC,UAAI,CAEHC,MAAO,CACLC,KAAM,EACNmB,eAAgB,SAChBC,WAAY,SACZnB,gBAAiB,UACjBoB,QAAS,IACTlB,SAAA,CAEFC,cAACkB,UAAI,CAACvB,MAAO,CAAEwB,MAAO,QAASC,SAAU,IAAKrB,SAC1C,SAAQe,IAEZd,cAACqB,UAAU,CAAC1B,MAAO,CAAEN,MAAO,QAASU,SAClC,IAAIU,MAAM,KAAKa,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAC9B,OACEzB,cAACN,UAAI,CAEHC,MAAO,CACL+B,YAAa,EACbC,YAAa,YACbV,QAAS,IACTlB,SAEFC,cAACkB,UAAI,CAAAnB,SAAE0B,KAPFA,UAhBRX,QAgCbrB,eAACC,UAAI,CACHC,MAAO,CACLiC,UAAW,GACXC,cAAe,MACfd,eAAgB,gBAChBhB,SAAA,CAEFC,cAAC8B,UAAO,CAACC,QAAS,eAAAC,EAAA,OAAe,OAAfA,EAAMzC,EAAE0C,cAAO,EAATD,EAAWE,cAAanC,SAC7C,SAEHC,cAAC8B,UAAO,CAACC,QAAS,eAAAI,EAAA,OAAe,OAAfA,EAAM5C,EAAE0C,cAAO,EAATE,EAAWC,cAAarC,SAC7C","file":"static/js/4.a25f63a4.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { ScrollView, Text, View } from \"react-native\";\nimport Carousel from \"react-native-snap-carousel\";\n\nimport SButton from \"../../components/SButton\";\nimport { window } from \"../../constants\";\n\nconst PAGE_WIDTH = window.width;\n\nfunction Index() {\n  const r = React.useRef<Carousel<any>>(null);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: \"#f1f1f1\",\n        paddingTop: 100,\n      }}\n    >\n      <View style={{ width: PAGE_WIDTH, height: 240 }}>\n        <Carousel\n          ref={r}\n          loop\n          itemWidth={PAGE_WIDTH}\n          sliderWidth={PAGE_WIDTH}\n          data={[...new Array(50).keys()]}\n          windowSize={3}\n          renderItem={({ index }: { index: number }) => (\n            <View\n              key={index}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                backgroundColor: \"#ff7a45\",\n                padding: 16,\n              }}\n            >\n              <Text style={{ color: \"white\", fontSize: 30 }}>\n                {`index:${index}`}\n              </Text>\n              <ScrollView style={{ width: \"100%\" }}>\n                {new Array(100).fill(0).map((_, i) => {\n                  return (\n                    <View\n                      key={i}\n                      style={{\n                        borderWidth: 1,\n                        borderColor: \"#0000001a\",\n                        padding: 16,\n                      }}\n                    >\n                      <Text>{i}</Text>\n                    </View>\n                  );\n                })}\n              </ScrollView>\n            </View>\n          )}\n        />\n      </View>\n      <View\n        style={{\n          marginTop: 24,\n          flexDirection: \"row\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <SButton onPress={() => r.current?.snapToPrev()}>\n          {\"Prev\"}\n        </SButton>\n        <SButton onPress={() => r.current?.snapToNext()}>\n          {\"Next\"}\n        </SButton>\n      </View>\n    </View>\n  );\n}\n\nexport default Index;\n"],"sourceRoot":""}